---
  - name: Copy 'is_cluster_ready' file
    copy:
      dest: /bin/is_cluster_ready
      content: "{{is_cluster_ready_script}}"
      mode: 0755

  - name: Update the /etc/hosts file
    shell: |
      for i in `seq 1 {{max_number_of_nodes}}`; do
        item="{{vnode_prefix}}${i}";
        grep -q "\<${item}\>" /etc/hosts || echo "127.0.0.1 ${item}.localdomain ${item}" >> /etc/hosts;
      done

  - name: Create the slurm.conf file
    template: dest={{ SLURM_CONF }} src=slurm.conf.j2

  - name: Set blcr config in SLURM
    lineinfile: dest={{ SLURM_CONF }} regexp='#CheckpointType=' line='CheckpointType=checkpoint/blcr' state=present
    when: "'blcr' in TEMPLATES"

  - name: Set 'ControlMachine' property on SLURM config file
    lineinfile: dest={{ SLURM_CONF }} regexp='ControlMachine=' line='ControlMachine=slurmserver' state=present

  - name: Set node names in slurm.conf
    lineinfile: dest={{SLURM_CONF}} regexp='NodeName=' line='NodeName={{vnode_prefix}}[1-{{ec3_max_instances|int}}] CPUs=1 State=UNKNOWN'

  - name: Set partition name parameter in SLURM config file
    lineinfile: dest={{SLURM_CONF}} regexp='PartitionName=' line='PartitionName=debug Nodes={{vnode_prefix}}[1-{{ec3_max_instances|int}}] Default=YES MaxTime=INFINITE State=UP'

  # start SLURM slurmctld daemon
  - name: Start SLURM slurmctld daemon in Deb systems
    shell: pgrep slurmctld || nohup /usr/local/sbin/slurmctld > /dev/null 2>&1 &
    when: ansible_os_family == "Debian"

  - name: Start SLURM slurmctld daemon in RedHat systems
    command: systemctl start slurm
    when: ansible_os_family == "RedHat"

  - name: Reconfigure SLURM
    shell: scontrol reconfig
